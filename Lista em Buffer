#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Element{
    int num;
    char name[20];
} typedef element;

struct pc{
    int ne, count1, count2;
}

void *pBuffer;
int *ne, *count1, *count2;
void appoint();
void push();
void pop();
void list();

int main()
{
    pBuffer = (void*) malloc(sizeof(struct pc));
    appoint();
    *count1 = 1;
    *ne = 1;
    
    while(*count1){
        printf("Choose an option: ");
        printf("0. EXIT ");
        printf("1. ADD ");
        printf("2. REVOME ");
        printf("3. LIST ");
        scanf("%d", &(*count1));
        if(*count1 = 0) break;
        else if(*count1 = 1) push();
        else if(*count1 = 2) pop();
        else if(*count1 = 3) list();
    }
    free(pBuffer);
    return 0;
}
void appoint(){
    ne =(int*) pBuffer;
    count1 = ne + 1;
    count2 = count1 + 1;
}
void push(){
    *ne += 1;
    element *p;
    pBuffer = (void*) realloc(pBuffer, sizeof(struct pc) + (sizeof(struct element)*(*ne)));
    appoint();
    p = (element*) count2 + 1;
    p = p + (sizeof(element)*(*ne-1));
    printf("Tell the name: ");
    scanf("%s", p->name);
    printf("Tell the number: ");
    scanf("%d", &(p->num));
    printf("The element: %s, number: %d was added with sucess...", p->name, p->num);
}
void pop(){
    element *p1, *p2, *auxname;
    *ne -= 1;
    p1 = auxname = p2 = (element*) count2 + 1;
    p1 = p1 + sizeof(element);
    p2 = p2 + (sizeof(element)*(*ne-1)); // Aponta para o ultimo elemento para move-lo para o lugar do elemento retirado
    
    for(*count2 = 0; *count2 < (*ne)-1; *count2++){
        if(strcmp(auname->name, p1->name) == 0){
            strcpy(p1->name, p2->name);
            *p1 = *p2;
            pBuffer = (void*) realloc(pBuffer, sizeof(struct pc) + (sizeof(struct element)*(*ne)));
            appoint();
            break;
        }
        p1 = p1 + sizeof(element);
    }
}
void list(){
    element *p;
    p =(element*) count2 + 1;
    p = p + sizeof(element);  // Não se pode fazer p + 1 quando p é uma struct
    printf("The elements are: ");
    for(*count2 = 0; *count2 < (*ne)-1; *count2++){
        printf("Name: %s  Numeber: %d", p->name, p->number);
        p = p + sizeof(element);
    }
}
